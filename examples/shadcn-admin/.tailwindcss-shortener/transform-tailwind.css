/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  /* Custom CSS Variables */
  --header-height: 4rem;
  /* CSS Variables for light theme */
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
  --primary: 222.2 47.4% 11.2%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --accent: 210 40% 96.1%;
  --accent-foreground: 222.2 47.4% 11.2%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 222.2 84% 4.9%;
  --radius: 0.5rem;
}

.dark {
  --background: 222.2 84% 4.9%;
  --foreground: 210 40% 98%;
  --card: 222.2 84% 4.9%;
  --card-foreground: 210 40% 98%;
  --popover: 222.2 84% 4.9%;
  --popover-foreground: 210 40% 98%;
  --primary: 210 40% 98%;
  --primary-foreground: 222.2 47.4% 11.2%;
  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
  --accent: 217.2 32.6% 17.5%;
  --accent-foreground: 210 40% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 210 40% 98%;
  --border: 217.2 32.6% 17.5%;
  --input: 217.2 32.6% 17.5%;
  --ring: 212.7 26.8% 83.9%;
}

/* styles.css */

.a6 {
  overflow: hidden;
}

.a6[data-state='open'] {
  animation: slideDown 200ms ease-out;
}

.a6[data-state='closed'] {
  animation: slideUp 200ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }

  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-collapsible-content-height);
  }

  to {
    height: 0;
  }
}

* {
  border-color: hsl(var(--border));
}

body {
  min-height: 100svh;
  width: 100%;
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.mr {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}

@media (min-width: 1400px) {
  .mr {
    max-width: 1400px;
  }
}

.aa {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.j- {
  pointer-events: none;
}

.k4 {
  pointer-events: auto;
}

.cf {
  visibility: visible;
}

.cc {
  visibility: hidden;
}

.bf {
  position: fixed;
}

.bs {
  position: absolute;
}

.b {
  position: relative;
}

.b2 {
  position: sticky;
}

.bt {
  inset: 0px;
}

.cp {
  right: -1.25rem;
}

.bg {
  left: 0px;
}

.ge {
  left: 0.25rem;
}

.jg {
  left: 0.5rem;
}

.ih {
  left: 50%;
}

.bh {
  right: 0px;
}

.fn {
  right: 0.25rem;
}

.j2 {
  right: 0.5rem;
}

.oj {
  right: 0.75rem;
}

.iv {
  right: 1rem;
}

.bi {
  top: 0px;
}

.ln {
  top: 0.25rem;
}

.cq {
  top: 50%;
}

.top-2 {
  top: 0.5rem;
}

.ok {
  top: 0.625rem;
}

.iw {
  top: 1rem;
}

.ii {
  top: 50%;
}

.m9 {
  z-index: 20;
}

.bj {
  z-index: 50;
}

.ky {
  z-index: 100;
}

.nk {
  grid-column: span 1 / span 1;
}

.o {
  margin: auto;
}

.h4 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}

.n5 {
  margin-left: -1rem;
  margin-right: -1rem;
}

.c7 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mv {
  margin-left: auto;
  margin-right: auto;
}

.a7 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.n7 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.l2 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.ny {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.ph {
  margin-left: -0.75rem;
}

.mo {
  margin-bottom: 0.25rem;
}

.m0 {
  margin-bottom: 0.5rem;
}

.my {
  margin-bottom: 1rem;
}

.mh {
  margin-bottom: 2rem;
}

.ax {
  margin-left: 0.5rem;
}

.n_ {
  margin-left: 1rem;
}

.a8 {
  margin-left: 2rem;
}

.a3 {
  margin-left: auto;
}

.aw {
  margin-right: 0.5rem;
}

.gh {
  margin-top: 0.5rem;
}

.kt {
  margin-top: 1rem;
}

.no {
  margin-top: 1.5rem;
}

.m_ {
  margin-top: auto;
}

.mp {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

.ka {
  display: block;
}

.p {
  display: flex;
}

.c9 {
  display: inline-flex;
}

.\!table {
  display: table !important;
}

.table {
  display: table;
}

.aj {
  display: grid;
}

.cr {
  display: none;
}

.fs {
  aspect-ratio: 1 / 1;
}

.fp {
  width: 2.5rem;
  height: 2.5rem;
}

.b0 {
  height: 0px;
}

.as {
  height: 2.5rem;
}

.an {
  height: 3rem;
}

.ou {
  height: 0.5rem;
}

.py {
  height: 6rem;
}

.h-3 {
  height: 0.75rem;
}

.jh {
  height: 0.875rem;
}

.ez {
  height: 1rem;
}

.cu {
  height: 1.25rem;
}

.b8 {
  height: 1.5rem;
}

.f- {
  height: 1.75rem;
}

.b_ {
  height: 2rem;
}

.ev {
  height: 2.25rem;
}

.j3 {
  height: 1px;
}

.a {
  height: 50svh;
}

.fe {
  height: calc(100% - var(--header-height));
}

.e_ {
  height: var(--header-height);
}

.jy {
  height: var(--radix-select-trigger-height);
}

.c {
  height: 100%;
}

.h5 {
  height: 1px;
}

.n {
  height: 100svh;
}

.cl {
  max-height: 0px;
}

.jt {
  max-height: 24rem;
}

.hz {
  max-height: 300px;
}

.ck {
  max-height: 100vh;
}

.nv {
  min-height: 14rem;
}

.kx {
  min-height: 60px;
}

.ce {
  width: 0px;
}

.fq {
  width: 2.5rem;
}

.a9 {
  width: 3rem;
}

.l_ {
  width: 4rem;
}

.w-3 {
  width: 0.75rem;
}

.ji {
  width: 0.875rem;
}

.l9 {
  width: 9rem;
}

.e0 {
  width: 1rem;
}

.l7 {
  width: 10rem;
}

.cv {
  width: 1.25rem;
}

.c3 {
  width: 14rem;
}

.b9 {
  width: 1.5rem;
}

.ga {
  width: 1.75rem;
}

.jp {
  width: 18rem;
}

.b- {
  width: 2rem;
}

.ey {
  width: 2.25rem;
}

.ow {
  width: 100px;
}

.pu {
  width: 150px;
}

.ps {
  width: 160px;
}

.j4 {
  width: 1px;
}

.oe {
  width: 200px;
}

.ob {
  width: 240px;
}

.n- {
  width: 340px;
}

.pq {
  width: 70px;
}

.ov {
  width: 80px;
}

.cg {
  width: auto;
}

.q {
  width: 100%;
}

.oh {
  width: -moz-max-content;
  width: max-content;
}

.i9 {
  min-width: 8rem;
}

.jz {
  min-width: var(--radix-select-trigger-width);
}

.pe {
  max-width: 8rem;
}

.ba {
  max-width: 13rem;
}

.ij {
  max-width: 32rem;
}

.ol {
  max-width: 28rem;
}

.ci {
  flex: 1 1 0%;
}

.e- {
  flex: none;
}

.fr {
  flex-shrink: 0;
}

.kg {
  caption-side: bottom;
}

.gf {
  border-collapse: collapse;
}

.fo {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.ik {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.il {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.pc {
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-rotate-180 {
  --tw-rotate: -180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.a- {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cw {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.o1 {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

._ {
  animation: spin 1s linear infinite;
}

.h7 {
  cursor: default;
}

.j5 {
  cursor: pointer;
}

.h8 {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.pb {
  resize: none;
}

.resize {
  resize: both;
}

.oi {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.ni {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.om {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.ng {
  flex-direction: row;
}

.r {
  flex-direction: column;
}

.i3 {
  flex-direction: column-reverse;
}

.o_ {
  align-items: flex-start;
}

.l3 {
  align-items: flex-end;
}

.s {
  align-items: center;
}

.ao {
  justify-content: flex-start;
}

.ca {
  justify-content: flex-end;
}

.t {
  justify-content: center;
}

.b3 {
  justify-content: space-between;
}

.ak {
  gap: 0.25rem;
}

.nt {
  gap: 3rem;
}

.u {
  gap: 0.5rem;
}

.a_ {
  gap: 1rem;
}

.n6 {
  gap: 1.5rem;
}

.on {
  gap: 2rem;
}

.pv {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.o0 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.pt {
  row-gap: 0.5rem;
}

.f_ > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.k5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.o- > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.cx > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.nh > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
}

.nx > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.c5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.g- > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.jl > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.pa > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

.f6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.og > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.nz > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.cj {
  overflow: auto;
}

.e {
  overflow: hidden;
}

.o2 {
  overflow-x: auto;
}

.h0 {
  overflow-y: auto;
}

.g {
  overflow-x: hidden;
}

.nb {
  overflow-x: scroll;
}

.ma {
  overflow-y: scroll;
}

.cb {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c_ {
  white-space: nowrap;
}

.ap {
  text-wrap: wrap;
}

.nw {
  border-radius: 0.25rem;
}

.cs {
  border-radius: 9999px;
}

.ay {
  border-radius: var(--radius);
}

.c- {
  border-radius: calc(var(--radius) - 2px);
}

.aq {
  border-radius: 0px;
}

.hf {
  border-radius: calc(var(--radius) - 4px);
}

.g8 {
  border-radius: 0.75rem;
}

.el {
  border-width: 1px;
}

.j6 {
  border-width: 2px;
}

.ac {
  border-bottom-width: 1px;
}

.at {
  border-left-width: 1px;
}

.bk {
  border-right-width: 2px;
}

.kj {
  border-top-width: 1px;
}

.pj {
  border-style: dashed;
}

.mi {
  --tw-border-opacity: 1;
  border-color: rgb(147 197 253 / var(--tw-border-opacity));
}

.lg {
  border-color: hsl(var(--destructive));
}

.em {
  border-color: hsl(var(--input));
}

.oq {
  border-color: hsl(var(--muted));
}

.hg {
  border-color: hsl(var(--primary));
}

.border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(239 68 68 / var(--tw-border-opacity));
}

.f1 {
  border-color: transparent;
}

.au {
  --tw-border-opacity: 1;
  border-left-color: rgb(100 116 139 / var(--tw-border-opacity));
}

.bl {
  border-right-color: hsl(var(--muted));
}

.os {
  --tw-bg-opacity: 1;
  background-color: rgb(236 237 239 / var(--tw-bg-opacity));
}

.gz {
  background-color: hsl(var(--accent));
}

.f {
  background-color: hsl(var(--background));
}

.bx {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.ib {
  background-color: rgb(0 0 0 / 0.8);
}

.mj {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}

.h6 {
  background-color: hsl(var(--border));
}

.g9 {
  background-color: hsl(var(--card));
}

.eh {
  background-color: hsl(var(--destructive));
}

.ft {
  background-color: hsl(var(--muted));
}

.kk {
  background-color: hsl(var(--muted) / 0.5);
}

.hk {
  background-color: hsl(var(--popover));
}

.az {
  background-color: hsl(var(--primary));
}

.ms {
  background-color: hsl(var(--primary-foreground));
}

.ep {
  background-color: hsl(var(--secondary));
}

.oy {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

.ox {
  --tw-bg-opacity: 1;
  background-color: rgb(30 41 59 / var(--tw-bg-opacity));
}

.oa {
  --tw-bg-opacity: 1;
  background-color: rgb(2 6 23 / var(--tw-bg-opacity));
}

.ff {
  background-color: transparent;
}

.ot {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.m8 {
  --tw-bg-opacity: 1;
  background-color: rgb(24 24 27 / var(--tw-bg-opacity));
}

.jj {
  fill: currentColor;
}

.jq {
  fill: hsl(var(--primary));
}

.gb {
  padding: 0px;
}

.h1 {
  padding: 0.25rem;
}

.m4 {
  padding: 2.5rem;
}

.ks {
  padding: 0.5rem;
}

.g7 {
  padding: 0.75rem;
}

.fa {
  padding: 1rem;
}

.ha {
  padding: 1.5rem;
}

.a0 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.av {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.fu {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.ew {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.b4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.ar {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.ex {
  padding-left: 2rem;
  padding-right: 2rem;
}

.cm {
  padding-top: 0px;
  padding-bottom: 0px;
}

.fv {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.fg {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.h9 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.ae {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.b5 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.fc {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.mb {
  padding-bottom: 4rem;
}

.nc {
  padding-bottom: 0.5rem;
}

.j0 {
  padding-left: 0.5rem;
}

.oc {
  padding-left: 0.75rem;
}

.i8 {
  padding-left: 2rem;
}

.jf {
  padding-right: 0.5rem;
}

.n3 {
  padding-right: 1rem;
}

.k6 {
  padding-right: 1.5rem;
}

.j1 {
  padding-right: 2rem;
}

.hc {
  padding-top: 0px;
}

.f9 {
  padding-top: 0.25rem;
}

.h {
  padding-top: 4rem;
}

.oo {
  padding-top: 0.5rem;
}

.mc {
  padding-top: 1rem;
}

.ko {
  text-align: left;
}

.y {
  text-align: center;
}

.kp {
  vertical-align: middle;
}

.pm {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.l1 {
  font-size: 1.5rem;
  line-height: 2rem;
}

.v {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.a1 {
  font-size: 0.625rem;
}

.gg {
  font-size: 0.8rem;
}

.nn {
  font-size: 7rem;
}

.o9 {
  font-size: 1rem;
  line-height: 1.5rem;
}

.i6 {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.c0 {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.mz {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.bb {
  font-size: 0.75rem;
  line-height: 1rem;
}

.w {
  font-weight: 700;
}

.ch {
  font-weight: 500;
}

.c4 {
  font-weight: 400;
}

.fw {
  font-weight: 600;
}

.n8 {
  text-transform: uppercase;
}

.px {
  text-transform: capitalize;
}

.c6 {
  line-height: 1;
}

.x {
  line-height: 1.25;
}

.hb {
  letter-spacing: -0.025em;
}

.ia {
  letter-spacing: 0.1em;
}

.g0 {
  color: hsl(var(--accent-foreground));
}

.g_ {
  color: hsl(var(--card-foreground));
}

.hj {
  color: currentColor;
}

.jm {
  color: hsl(var(--destructive));
}

.ei {
  color: hsl(var(--destructive-foreground));
}

.f4 {
  color: hsl(var(--foreground));
}

.lo {
  color: hsl(var(--foreground) / 0.5);
}

.mq {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.z {
  color: hsl(var(--muted-foreground));
}

.pi {
  color: hsl(var(--muted-foreground) / 0.7);
}

.hl {
  color: hsl(var(--popover-foreground));
}

.es {
  color: hsl(var(--primary));
}

.a2 {
  color: hsl(var(--primary-foreground));
}

.eq {
  color: hsl(var(--secondary-foreground));
}

.m5 {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.m2 {
  text-decoration-line: underline;
}

.np {
  text-decoration-color: hsl(var(--muted-foreground));
}

.nq {
  text-decoration-style: dashed;
}

.et {
  text-underline-offset: 4px;
}

.b1 {
  opacity: 0;
}

.of {
  opacity: 1;
}

.bz {
  opacity: 0.5;
}

.jk {
  opacity: 0.6;
}

.ix {
  opacity: 0.7;
}

.lx {
  opacity: 0.9;
}

.b6 {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.im {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.jc {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ej {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hy {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.kb {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.iy {
  --tw-ring-offset-color: hsl(var(--background));
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.i {
  transition-property: margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.af {
  transition-property: max-height,padding;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.bu {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.bm {
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.a4 {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.c1 {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.iz {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.kc {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.bv {
  transition-delay: 100ms;
}

.in {
  transition-duration: 200ms;
}

.ag {
  transition-duration: 500ms;
}

.bw {
  transition-duration: 700ms;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

.ly {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.lz {
  --tw-enter-opacity: 0;
}

.l0 {
  --tw-enter-scale: .95;
}

.in {
  animation-duration: 200ms;
}

.ag {
  animation-duration: 500ms;
}

.bw {
  animation-duration: 700ms;
}

.bv {
  animation-delay: 100ms;
}

/* Hide scrollbar for Chrome, Safari and Opera */

.l-::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */

.l- {
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
  /* Firefox */
}

.c8 > * {
  display: inline-block !important;
}

.fh::file-selector-button {
  border-width: 0px;
}

.fi::file-selector-button {
  background-color: transparent;
}

.fj::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.fk::file-selector-button {
  font-weight: 500;
}

.fl::-moz-placeholder {
  color: hsl(var(--muted-foreground));
}

.fl::placeholder {
  color: hsl(var(--muted-foreground));
}

.e1::after {
  content: var(--tw-content);
  pointer-events: none;
}

.e2::after {
  content: var(--tw-content);
  position: absolute;
}

.e3::after {
  content: var(--tw-content);
  bottom: 0px;
}

.e4::after {
  content: var(--tw-content);
  left: 0px;
}

.e5::after {
  content: var(--tw-content);
  display: none;
}

.e6::after {
  content: var(--tw-content);
  height: 8rem;
}

.e7::after {
  content: var(--tw-content);
  width: 100%;
}

.e8::after {
  content: var(--tw-content);
  background-image: linear-gradient(180deg, transparent 10%, hsl(var(--background)) 70%);
}

.gi:focus-within {
  position: relative;
}

.gj:focus-within {
  z-index: 20;
}

.or:hover {
  border-color: hsl(var(--accent));
}

.en:hover {
  background-color: hsl(var(--accent));
}

.mk:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}

.f3:hover {
  background-color: hsl(var(--destructive) / 0.8);
}

.ek:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.o7:hover {
  background-color: hsl(var(--muted));
}

.km:hover {
  background-color: hsl(var(--muted) / 0.5);
}

.gv:hover {
  background-color: hsl(var(--primary));
}

.f2:hover {
  background-color: hsl(var(--primary) / 0.8);
}

.eg:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.lh:hover {
  background-color: hsl(var(--secondary));
}

.er:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.o8:hover {
  background-color: transparent;
}

.eo:hover {
  color: hsl(var(--accent-foreground));
}

.lp:hover {
  color: hsl(var(--foreground));
}

.c2:hover {
  color: hsl(var(--primary));
}

.gw:hover {
  color: hsl(var(--primary-foreground));
}

.eu:hover {
  text-decoration-line: underline;
}

.nr:hover {
  text-decoration-style: solid;
}

.gc:hover {
  opacity: 1;
}

.n9:hover {
  opacity: 0.75;
}

.mg:hover {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.i7:focus {
  background-color: hsl(var(--accent));
}

.gx:focus {
  background-color: hsl(var(--primary));
}

.je:focus {
  color: hsl(var(--accent-foreground));
}

.gy:focus {
  color: hsl(var(--primary-foreground));
}

.lq:focus {
  opacity: 1;
}

.fx:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.jr:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.fy:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.fz:focus {
  --tw-ring-color: hsl(var(--ring));
}

.f0:focus {
  --tw-ring-offset-width: 2px;
}

.ea:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.eb:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.j7:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ec:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}

.j8:focus-visible {
  --tw-ring-offset-width: 2px;
}

.j9:focus-visible {
  --tw-ring-offset-color: hsl(var(--background));
}

.ee:disabled {
  pointer-events: none;
}

.fm:disabled {
  cursor: not-allowed;
}

.ef:disabled {
  opacity: 0.5;
}

.ab:hover .lr {
  opacity: 1;
}

.ab[data-collapsed=true] .al {
  justify-content: center;
}

.ab.lf .li {
  border-color: hsl(var(--muted) / 0.4);
}

.ab[data-collapsed=true] .am {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.ab.lf .ls {
  --tw-text-opacity: 1;
  color: rgb(252 165 165 / var(--tw-text-opacity));
}

.ab.lf .lj:hover {
  border-color: hsl(var(--destructive) / 0.3);
}

.ab.lf .lk:hover {
  background-color: hsl(var(--destructive));
}

.ab.lf .ll:hover {
  color: hsl(var(--destructive-foreground));
}

.ab.lf .lt:hover {
  --tw-text-opacity: 1;
  color: rgb(254 242 242 / var(--tw-text-opacity));
}

.ab.lf .lm:focus {
  --tw-ring-color: hsl(var(--destructive));
}

.ab.lf .lu:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(248 113 113 / var(--tw-ring-opacity));
}

.ab.lf .lv:focus {
  --tw-ring-offset-color: #dc2626;
}

.he:disabled ~ .jn {
  cursor: not-allowed;
}

.he:disabled ~ .jo {
  opacity: 0.7;
}

.g5[aria-selected="true"] {
  background-color: hsl(var(--accent));
}

.g2[aria-selected="true"] {
  background-color: hsl(var(--accent) / 0.5);
}

.g6[aria-selected="true"] {
  color: hsl(var(--accent-foreground));
}

.g3[aria-selected="true"] {
  color: hsl(var(--muted-foreground));
}

.gs[aria-selected="true"] {
  opacity: 1;
}

.g4[aria-selected="true"] {
  opacity: 0.3;
}

.h_[data-disabled] {
  pointer-events: none;
}

.ju[data-side=bottom] {
  --tw-translate-y: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.jv[data-side=left] {
  --tw-translate-x: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.jw[data-side=right] {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.jx[data-side=top] {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.ke[data-state=checked] {
  --tw-translate-x: 1rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.kf[data-state=unchecked] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.k7[data-swipe=cancel] {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.k8[data-swipe=end] {
  --tw-translate-x: var(--radix-toast-swipe-end-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.k9[data-swipe=move] {
  --tw-translate-x: var(--radix-toast-swipe-move-x);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.ku[data-state=active] {
  background-color: hsl(var(--background));
}

.hh[data-state=checked] {
  background-color: hsl(var(--primary));
}

.i0[data-state=open] {
  background-color: hsl(var(--accent));
}

.pr[data-state=open] {
  background-color: hsl(var(--muted));
}

.kn[data-state=selected] {
  background-color: hsl(var(--muted));
}

.j_[data-state=unchecked] {
  background-color: hsl(var(--input));
}

.ah[data-collapsed=true] {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.kv[data-state=active] {
  color: hsl(var(--foreground));
}

.hi[data-state=checked] {
  color: hsl(var(--primary-foreground));
}

.i1[data-state=open] {
  color: hsl(var(--muted-foreground));
}

.h-[data-disabled] {
  opacity: 0.5;
}

.kw[data-state=active] {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.k_[data-swipe=move] {
  transition-property: none;
}

.ic[data-state=open] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.ie[data-state=closed] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.k-[data-swipe=end] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.if[data-state=closed] {
  --tw-exit-opacity: 0;
}

.la[data-state=closed] {
  --tw-exit-opacity: 0.8;
}

.ig[data-state=open] {
  --tw-enter-opacity: 0;
}

.io[data-state=closed] {
  --tw-exit-scale: .95;
}

.ip[data-state=open] {
  --tw-enter-scale: .95;
}

.i_[data-side=bottom] {
  --tw-enter-translate-y: -0.5rem;
}

.i-[data-side=left] {
  --tw-enter-translate-x: 0.5rem;
}

.ja[data-side=right] {
  --tw-enter-translate-x: -0.5rem;
}

.jb[data-side=top] {
  --tw-enter-translate-y: 0.5rem;
}

.iq[data-state=closed] {
  --tw-exit-translate-x: -50%;
}

.lb[data-state=closed] {
  --tw-exit-translate-x: 100%;
}

.ir[data-state=closed] {
  --tw-exit-translate-y: -48%;
}

.is[data-state=open] {
  --tw-enter-translate-x: -50%;
}

.it[data-state=open] {
  --tw-enter-translate-y: -48%;
}

.lc[data-state=open] {
  --tw-enter-translate-y: -100%;
}

.ab[data-state="open"] .a5 {
  --tw-rotate: -180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.m6:is(.dark *) {
  border-right-width: 1px;
}

.ml:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(29 78 216 / var(--tw-border-opacity));
}

.mm:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 37 84 / var(--tw-bg-opacity));
}

.mn:hover:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 58 138 / var(--tw-bg-opacity));
}

@media (min-width: 640px) {
  .kz {
    bottom: 0px;
  }

  .k0 {
    right: 0px;
  }

  .k1 {
    top: auto;
  }

  .l4 {
    margin-top: 0px;
    margin-bottom: 0px;
  }

  .l6 {
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  .pn {
    display: block;
  }

  .oz {
    width: 12rem;
  }

  .m- {
    width: 350px;
  }

  .mw {
    width: 480px;
  }

  .pf {
    max-width: 18rem;
  }

  .ne {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .f5 {
    flex-direction: row;
  }

  .k2 {
    flex-direction: column;
  }

  .l5 {
    align-items: center;
  }

  .i4 {
    justify-content: flex-end;
  }

  .i5 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .f7 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .po > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1.5rem * var(--tw-space-x-reverse));
    margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .f8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .iu {
    border-radius: var(--radius);
  }

  .i2 {
    text-align: left;
  }

  .le[data-state=open] {
    --tw-enter-translate-y: 100%;
  }
}

@media (min-width: 768px) {
  .bn {
    bottom: 0px;
  }

  .bo {
    right: auto;
  }

  .l {
    margin-left: 3.5rem;
  }

  .m {
    margin-left: 16rem;
  }

  .o3 {
    display: block;
  }

  .cy {
    display: flex;
  }

  .ct {
    display: inline-flex;
  }

  .by {
    display: none;
  }

  .bp {
    height: 100svh;
  }

  .cn {
    max-height: 100vh;
  }

  .bq {
    width: 3.5rem;
  }

  .br {
    width: 16rem;
  }

  .bc {
    width: 100px;
  }

  .pg {
    max-width: 31rem;
  }

  .k3 {
    max-width: 420px;
  }

  .me {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .j {
    overflow-y: hidden;
  }

  .ai {
    border-style: none;
  }

  .b7 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .fb {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .co {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }

  .k {
    padding-top: 0px;
  }

  .na {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

  .ns {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .e9::after {
    content: var(--tw-content);
    display: block;
  }
}

@media (min-width: 1024px) {
  .nm {
    grid-column: span 3 / span 3;
  }

  .nl {
    grid-column: span 4 / span 4;
  }

  .m7 {
    display: flex;
  }

  .pk {
    display: none;
  }

  .n2 {
    width: 20%;
  }

  .l8 {
    width: 250px;
  }

  .be {
    width: 300px;
  }

  .mt {
    max-width: none;
  }

  .n4 {
    max-width: 36rem;
  }

  .m3 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .mf {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .nf {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .nj {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }

  .nu {
    flex-direction: row;
  }

  .o4 {
    flex-direction: column;
  }

  .o5 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0px * var(--tw-space-x-reverse));
    margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
  }

  .n0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(3rem * var(--tw-space-x-reverse));
    margin-left: calc(3rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .cz > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1.5rem * var(--tw-space-x-reverse));
    margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .pp > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .n1 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .o6 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
  }

  .mx {
    padding: 2rem;
  }

  .mu {
    padding-left: 0px;
    padding-right: 0px;
  }

  .pw {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
}

.lw+div {
  font-size: 0.75rem;
  line-height: 1rem;
}

.gn:has(>.gu) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.go:has(>.gt) {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}

.gr:has([aria-selected]) {
  border-radius: calc(var(--radius) - 2px);
}

.gk:has([aria-selected]) {
  background-color: hsl(var(--accent));
}

.gp:has([aria-selected]):first-child {
  border-top-left-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
}

.gq:has([aria-selected]):last-child {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.gl:has([aria-selected].g1) {
  background-color: hsl(var(--accent) / 0.5);
}

.gm:has([aria-selected].gu) {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.op:has([data-state=checked])>div {
  border-color: hsl(var(--primary));
}

.kq:has([role=checkbox]) {
  padding-right: 0px;
}

.kr>[role=checkbox] {
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.js>span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.kl:last-child>tr {
  border-bottom-width: 0px;
}

.hm [cmdk-group-heading] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.h2 [cmdk-group-heading] {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.h3 [cmdk-group-heading] {
  font-size: 0.75rem;
  line-height: 1rem;
}

.hn [cmdk-group-heading] {
  font-weight: 500;
}

.ho [cmdk-group-heading] {
  color: hsl(var(--muted-foreground));
}

.hp [cmdk-group]:not([hidden]) ~[cmdk-group] {
  padding-top: 0px;
}

.hq [cmdk-group] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.hr [cmdk-input-wrapper] svg {
  height: 1.25rem;
}

.hs [cmdk-input-wrapper] svg {
  width: 1.25rem;
}

.ht [cmdk-input] {
  height: 3rem;
}

.hu [cmdk-item] {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.hv [cmdk-item] {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.hw [cmdk-item] svg {
  height: 1.25rem;
}

.hx [cmdk-item] svg {
  width: 1.25rem;
}

.pl svg {
  visibility: hidden;
}

.ki tr:last-child {
  border-width: 0px;
}

.kh tr {
  border-bottom-width: 1px;
}
